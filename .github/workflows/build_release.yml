name: "ðŸ“¦ Build & ðŸš€ Release"

env:
  PROJECT_FOLDER: mzs-tools
  PYTHON_VERSION: '3.10'

on:
  push:
    branches:
      - master
    # paths:
    #   - .github/workflows/build_release.yml
    #   - 'help/**/*'
    #   - "mzs_tools/**/*.py"
    #   - "mzs_tools/metadata.txt"
    tags: 
      - "*"


jobs:
  # translation:
  #   name: "ðŸ’¬ i18n compilation"
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Get source code
  #       uses: actions/checkout@v4

  #     - name: Setup Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}

  #     - name: Install translation requirements
  #       run: |
  #         sudo apt update
  #         sudo apt install qt5-qmake qttools5-dev-tools
  #         python3 -m pip install -U pyqt5-tools

  #     - name: Update translations
  #       run: pylupdate5 -noobsolete -verbose ${{ env.PROJECT_FOLDER }}/resources/i18n/plugin_translation.pro

  #     - name: Compile translations
  #       run: lrelease ${{ env.PROJECT_FOLDER }}/resources/i18n/*.ts

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: translations-build
  #         path: ${{ env.PROJECT_FOLDER }}/**/*.qm
  #         if-no-files-found: error

  # -- NO TAGS ----------------------------------------------------------------------
  packaging:
    name: "ðŸ“¦ Packaging plugin"
    runs-on: ubuntu-latest
    # needs: [translation]

    if: ${{ !startsWith(github.ref, 'refs/tags/') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Setup Python
      #   uses: actions/setup-python@v5
      #   with:
      #     # cache: "pip"
      #     # cache-dependency-path: "requirements/packaging.txt"
      #     python-version: ${{ env.PYTHON_VERSION }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      # - name: Setup Just
      #   uses: extractions/setup-just@v2

      - name: Install dependencies
        # run: |
        #   python -m pip install -U pip setuptools wheel
        #   python -m pip install -U -r requirements/packaging.txt
        run: |
          sudo apt update
          sudo apt install gh
          uv venv --system-site-packages -p 3.10
          uv pip install -U pip
          uv pip install -U --force-reinstall setuptools wheel
          uv pip install -U transifex-python pyseeyou
          uv pip install -U qgis-plugin-ci
        

      # - name: Download translations
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: translations-build
      #     path: ${{ env.PROJECT_FOLDER }}
  
      # - name: Amend gitignore to include compiled translations and add it to tracked files
      #   run: |
      #     # include compiled translations
      #     sed -i "s|^*.qm.*| |" .gitignore

      #     # git add full project
      #     git add ${{ env.PROJECT_FOLDER }}/

      - name: Package the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp --remove-destination LICENSE mzs_tools/
          cp --remove-destination CHANGELOG.md mzs_tools/
          cp --remove-destination CREDITS.md mzs_tools/
          git add .
          source .venv/bin/activate
          qgis-plugin-ci package latest \
            --allow-uncommitted-changes \
            --plugin-repo-url $(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
          mkdir temp
          unzip mzs_tools.*.zip -d temp
          mv temp/mzs_tools temp/MzSTools
          cd temp
          zip -r $(cd ../ && ls -1 mzs_tools.*.zip) MzSTools
          cp *.zip ../
          cd ..
          rm -rf temp
          mv "$(find . -name 'mzs_tools.*.zip')" "$(find . -name 'mzs_tools.*.zip' | sed 's/mzs_tools/MzSTools/')"
          sed -i 's/mzs_tools/MzSTools/g' plugins.xml
        # ln -sf LICENSE mzs_tools/LICENSE
        # ln -sf CREDITS.md mzs_tools/CREDITS.md
        # ln -sf CHANGELOG.md mzs_tools/CHANGELOG.md
        # git add .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_FOLDER }}-latest
          path: |
            plugins.xml
            MzSTools.*.zip
          if-no-files-found: error

  # -- ONLY TAGS ----------------------------------------------------------------------
  # release:
  #   name: "ðŸš€ Release on tag"
  #   runs-on: ubuntu-latest    
  #   permissions:
  #     contents: write
  #   # needs: [translation]

  #   if: startsWith(github.ref, 'refs/tags/')

  #   steps:
  #     - name: Get tag name as version
  #       id: get_version
  #       run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Python
  #       uses: actions/setup-python@v5
  #       with:
  #         cache: "pip"
  #         cache-dependency-path: "requirements/packaging.txt"
  #         python-version: ${{ env.PYTHON_VERSION }}

  #     - name: Install project requirements
  #       run: |
  #         python -m pip install -U pip setuptools wheel
  #         python -m pip install -U -r requirements/packaging.txt

  #     - name: Download translations
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: translations-build
  #         path: ${{ env.PROJECT_FOLDER }}

  #     - name: Amend gitignore to include compiled translations and add it to tracked files
  #       run: |
  #         # include compiled translations
  #         sed -i "s|^*.qm.*| |" .gitignore

  #         # git add full project
  #         git add ${{ env.PROJECT_FOLDER }}/

  #     - name: Create GitHub Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         fail_on_unmatched_files: true
  #         generate_release_notes: true

  #     - name: Deploy plugin
  #       run: >-
  #         qgis-plugin-ci
  #         release ${GITHUB_REF/refs\/tags\//}
  #         --allow-uncommitted-changes
  #         --create-plugin-repo
  #         --github-token ${{ secrets.GITHUB_TOKEN }}
  #         --osgeo-username ${{ secrets.OSGEO_USER }}
  #         --osgeo-password ${{ secrets.OSGEO_PASSWORD }}
  

