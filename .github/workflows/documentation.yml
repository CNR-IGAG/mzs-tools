name: "ðŸ“š Documentation"

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/documentation.yml'
      - 'help/**/*'
      - "mzs_tools/**/*.py"
      - "mzs_tools/metadata.txt"
      - help/requirements.txt
    tags: 
      - "*"

  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/documentation.yml"
      - help/**/*
      - help/requirements.txt

  workflow_dispatch:

  workflow_run:
    workflows:
      - "ðŸ“¦ Build & ðŸš€ Release"
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment per branch/pr
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PROJECT_FOLDER: "mzs-tools"
  PYTHON_VERSION: 3.12

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
          cache: "pip"
          cache-dependency-path: "help/requirements.txt"
          python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache Sphinx cache
      uses: actions/cache@v4
      with:
        path: help/_build/cache
        key: ${{ runner.os }}-sphinx-${{ hashFiles('help/**/*') }}
        restore-keys: |
          ${{ runner.os }}-sphinx-

    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U -r help/requirements.txt
        sudo apt update
        sudo apt install -y texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-lang-italian latexmk

    - name: Build doc using Sphinx
      run: |
        sphinx-build -b html -j auto -d help/_build/cache -q help/source help/_build/html
        sphinx-build -b latex -j auto -d help/_build/cache -q help/source help/_build/latex
        cd help/_build/latex
        latexmk -pdf -dvi- -ps- MzSTools.tex
        cp MzSTools.pdf ../html/

    - name: Save build doc as artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: |
          help/_build/html/*
          help/_build/latex/MzSTools.pdf
        if-no-files-found: error
        retention-days: 30

    - name: Download artifact from build workflow
      if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master')
      uses: dawidd6/action-download-artifact@v7
      with:
        allow_forks: false
        branch: master
        event: push
        github_token: ${{ secrets.GITHUB_TOKEN }}
        if_no_artifact_found: warn
        name: ${{ env.PROJECT_FOLDER }}-latest
        path: help/_build/html/
        # run_id: ${{ github.event.workflow_run.id }}
        workflow: build_release.yml

    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: ${{ github.event_name == 'push' && ( startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master' ) }}

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      if: ${{ github.event_name == 'push' && ( startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master' ) }}
      with:
        # Upload entire repository
        path: help/_build/html/
        
    - name: Deploy to GitHub Pages
      id: deployment
      if: ${{ github.event_name == 'push' && ( startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master' ) }}
      uses: actions/deploy-pages@v4

